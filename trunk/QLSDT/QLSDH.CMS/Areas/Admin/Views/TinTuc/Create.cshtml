@model TEMIS.Model.TinTuc
@using TEMIS.Model;
@{
    ViewBag.Title = "Thêm mới bài viết";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    List<DanhMucTinTuc> listDanhMucTin = (List<DanhMucTinTuc>)ViewBag.listDanhMuc;
}
<style type="text/css">
    .dropzone {
        min-height: 200px !important;
    }

    select {
        width: 200px;
    }
</style>
<script src="~/Content/ckeditor/ckeditor.js"></script>
<script src="~/Content/ckfinder/ckfinder.js"></script>
<div class="page-header" style="margin-left:15px">
    <h3 class="title">Thêm mới</h3>
</div>
@using (Html.BeginForm("Create", "TinTuc", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmCreate" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin:10px">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Tiêu đề</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TieuDe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Mô tả ngắn</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.MoTaNgan, new { @id = "Summary", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Nội dung</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NoiDung, new { @id = "NoiDung" })
                <script>
                    CKEDITOR.replace('NoiDung', {
                        filebrowserBrowseUrl: '/Content/ckfinder/ckfinder.html',
                        filebrowserImageBrowseUrl: '/Content/ckfinder/ckfinder.html?type=Images',
                        filebrowserUploadUrl: '/Content/ckfinder/core/connector/php/connector?command=QuickUpload&type=Files',
                        filebrowserImageUploadUrl: '/Content/ckfinder/core/connector/php/connector?command=QuickUpload&type=Images'
                    });
                </script>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Ảnh</label>
            <div class="col-md-10">
                <input type="file" name="files" id="files" style="width: 100%;" accept="image/png, image/gif, image/jpeg" onchange="handleFileInput()" /><br>
                <i style="font-size: 11px; font-style: italic;">File ảnh có định dạng .png, gif hoặc .jpg</i><br>
                <img id="blah" src="" alt="" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Chuyên mục</label>
            <div class="col-md-10">
                <select id="DanhMuc" name="DanhMuc" class="form-control">
                    @foreach (var item in listDanhMucTin)
                    {
                        <option value="@item.Id">@item.TenDanhMuc</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="margin-top:30px">
                @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-primary"})
                <input type="submit" value="Lưu" class="btn btn-success" id="btnSave"/>
            </div>
        </div>

    </div>
    <input type="hidden" name="listIamgeUploaded" id="listIamgeUploaded" value="" />
}
<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(150);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
<script type="text/javascript">
    $(document).ready(function() {
          $('#TieuDe').prop('maxlength', 500);
          $('#Summary').prop('maxlength', 500);
    });
    let errorFlag = false;
    function handleFileInput() {
      let file = $("#files").val();
      var ext = file.substring(file.lastIndexOf(".") + 1).toLowerCase();
      let accept = ["gif", "png", "jpg"];
      if (
        !accept.some((val) => {
          return val == ext;
        })
      ) {
        toastr.error("File đính kèm sai định dang");
        errorFlag = true;
        return false;
      }else{
        errorFlag = false;
      }
    }

    // $('#frmCreate').on('submit', function () {
    //     for (instance in CKEDITOR.instances) {
    //         CKEDITOR.instances[instance].updateElement();
    //     }
    // });

    $("#btnSave").click(function(){
        let tieuDe = $("#TieuDe").val().trim();
        if(!tieuDe){
            toastr.error("Tiêu đề không được bỏ trống");
            return false;
        }
        if(errorFlag){
            toastr.error("File đính kèm sai định dang");
            return false;
        }
        errorFlag = false;
        for (instance in CKEDITOR.instances) {
            CKEDITOR.instances[instance].updateElement();
        }

    })

</script>


@*@{
        ViewBag.Title = "Create";
        Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    }

    <h2>Create</h2>*@


@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>TinTuc</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.TieuDe, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TieuDe, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MoTaNgan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MoTaNgan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MoTaNgan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NoiDung, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoiDung, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AnhDaiDien, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AnhDaiDien, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AnhDaiDien, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DanhMuc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DanhMuc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DanhMuc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NgayTao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NgayTao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NgayTao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NguoiTao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NguoiTao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NguoiTao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
